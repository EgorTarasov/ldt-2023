---
version: "3"

volumes:
  data:
    external: true
  certs-le:

services:
  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    dns:
      - 1.1.1.1
    env_file: .env
    network_mode: "host"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config:/etc/traefik"
      - "certs-le:/certs/letsencrypt"
    command:
      # Tell Traefik to discover containers using the Docker API
      - "--log.level=DEBUG"
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      # Set up custom certs
      # - --providers.file.directory=/etc/traefik/dyn
      # Set up ACME
      - --certificatesresolvers.le.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/certs/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.backendentry.address=:9999
      - --entrypoints.backendentry.http.tls=true

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker/data:/var/lib/postgresql/data
  # frontend:
  #   build:
  #     context: ./lms-front
  #     dockerfile: Dockerfile
  #   restart: always
  #   depends_on:
  #     - backend
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.fronend.loadbalancer.server.port=8080"
  #     - "traefik.http.routers.fronend.rule=Host(`larek.itatmisis.ru`)"
  #     - "traefik.http.routers.fronend.tls.certresolver=le"
  #     - "traefik.http.routers.fronend.entrypoints=websecure"
  #     - "traefik.http.routers.fronend.tls=true"

  backend:
    build:
      context: .
      dockerfile: deployment/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
    depends_on:
      - db

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=9999"
      - "traefik.http.routers.backend.rule=Host(`larek.itatmisis.ru`)"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.routers.backend.entrypoints=backendentry"
      - "traefik.http.routers.backend.tls=true"